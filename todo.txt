- remove assign ',' assign (useless and causes one conflict)
- switch to ML like syntax
    - reintroduce anonymou lambda syntax
    - elif or turn if into cond (need syntax for it...)
    - make if an expression
    - use : for cons?
- mechanism to turn operators into functions?
- reimplement every, any, sum, product in terms of reduce
- like named parameters in function calls cause conflict
- memory corruption - most apparent on Windows
- tests for nested calls (map, filter, reverse, etc)
- shadowing a previously lifted binding should replace the lifted version
- concatenating the same string variable onto itself creates an infinite value...
- re-introduce line numbers, respecting file/module name and position
- parameter checking (arity and type) of all cases in eval() -> use mkerr()
- re-introduce full funcall support in parser -> e.g. [x]()
- 3 shift/reduce errors introduced by unary minus
- returning a value and not using it sometimes causes a crash (test case?)
- list evaluation involves lots of copying
- smarter dispatch of built-in functions (Michael's suggestion)
- should attempted redefinition of a binding in the same scope throw an error?
- full pretty printer (not all forms are covered yet)
- printing lists of strings is broken
- gc
- repl
- currying
- lazy evaluation
- pattern matching
