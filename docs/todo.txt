- merge nil and [] (and false?)
- docs: operators
- docs: use Michael's any definition
- cons operator (:) and make ++ non-generic
- reimplement every, any, sum, product in terms of reduce
- use list destructuring in standard library
- memory corruption - most apparent on Windows
- tests for nested calls (map, filter, reverse, etc)
- improved test coverage
- shadowing a previously lifted binding should replace the lifted version
- concatenating the same string variable onto itself creates an infinite value...
- better error messages throughout (description + line number)
- parameter checking (arity and type) of all cases in eval()
- re-introduce full funcall support in parser -> e.g. [x]()
- constructed strings print out as lists: 'a' ++ 'b' ++ 'c'
- smarter dispatch of built-in functions (Michael's suggestion)
- full pretty printer (not all forms are covered yet)
- math functions (sin, cos, tan, abs, etc)
- gc
- repl?
- currying?
